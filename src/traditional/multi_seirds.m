clear;
input_path = '../../inputs/inputs-r0.xlsx';

density_breakdown = [0.3, 0.5, 0.2];
compartment_breakdown = [0.95 0 0.05 0 0];

inputs = readtable(input_path);
num_pathogens = height(inputs);

parameters = readtable(input_path, 'Sheet', 'Parameters');
total_population = parameters.population;
duration = parameters.duration;

initial_conditions = readtable(input_path, 'Sheet', 'Initial Conditions');

outputs = cell(num_pathogens, 1);

for pathogen = 1:num_pathogens
    input = inputs(pathogen, :);
    conditions = initial_conditions(pathogen, :);
    compartments = [conditions.e, conditions.i, conditions.r];
    
    outputs{pathogen} = seirds( ...
        duration, ...
        input.beta, ...
        input.latency, ...
        input.infectious_period, ...
        input.cfr, ...
        input.immunity_period, ...
        total_population, ...
        [1 - sum(compartments), compartments, 0], ...
        parameters.birth_rate, ...
        parameters.death_rate);
end

days = 0:duration;

% figure('Name', 'Multi-SEIRDS - All');
figure(1);
deaths = zeros(1, duration + 1);
for pathogen = 1:num_pathogens
    output = outputs{pathogen};
    population = sum([ ...
        outputs{pathogen}.s, ...
        outputs{pathogen}.e, ...
        outputs{pathogen}.i, ...
        outputs{pathogen}.r, ...
        ], 2);
    prevalence = 100 * outputs{pathogen}.i ./ population;
    exposed = 100 * outputs{pathogen}.e ./ population;
    recovered = 100 * outputs{pathogen}.r ./ population;
    
    subplot(ceil(num_pathogens / 3), 3, pathogen);
    plot(days, [ ...
        outputs{pathogen}.s, ...
        outputs{pathogen}.e, ...
        outputs{pathogen}.i, ...
        outputs{pathogen}.r, ...
        outputs{pathogen}.d, ...
        prevalence, ...
        exposed, ...
        recovered], ...
        'LineWidth', 2);
    title([inputs.pathogen(pathogen) join(['beta = ', num2str(inputs.beta(pathogen))])]);
    legend('S', 'E', 'I', 'R', 'D', 'Prevalence (%)', 'Exposed (%)', 'Recovered (%)');
    xlabel('Days');
    ylabel('Population (%)');
    
    deaths = deaths + outputs{pathogen}.d';
    disp([num2str(prevalence(end)) '%, ' num2str(exposed(end)) '%, ' num2str(recovered(end)) '%']);
end

% population = total_population - deaths;
% figure('Name', 'Multi-SEIRDS - Totals');
% plot(days, [population; deaths], 'LineWidth', 2);
% legend('Population', 'Deaths');